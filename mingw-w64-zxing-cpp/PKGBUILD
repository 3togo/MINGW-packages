# Maintainer: Ariel Axionl <i at axionl dot me>
_realname=zxing-cpp
pkgbase=mingw-w64-${_realname}
pkgname="${MINGW_PACKAGE_PREFIX}-${_realname}"
pkgver=1.3.0
pkgrel=1
pkgdesc='A C++ library to decode QRCode'
arch=('any')
mingw_arch=('mingw32' 'mingw64' 'ucrt64' 'clang64' 'clang32' 'clangarm64')
url='https://github.com/nu-book/zxing-cpp'
license=('Apache')
depends=("${MINGW_PACKAGE_PREFIX}-gcc-libs")
makedepends=("${MINGW_PACKAGE_PREFIX}-cc"
             "${MINGW_PACKAGE_PREFIX}-cmake"
             "${MINGW_PACKAGE_PREFIX}-ninja")
options=('staticlibs')
source=(https://github.com/nu-book/zxing-cpp/archive/v${pkgver}/${_realname}-${pkgver}.tar.gz
        0001-cmake-Install-pkgconfig-file-in-mingw.patch)
sha256sums=('bfd8fc706def30e34f96088b5a7afdbe0917831e57a774d34e3ee864b01c6891'
            'f686536a7ef6733d4cc50fa7a6e62dea23caee8c99874d4db314a663e2d58d2b')

prepare() {
  cd "${srcdir}/${_realname}-${pkgver}"

  # https://github.com/nu-book/zxing-cpp/pull/325
  patch -p1 -i "${srcdir}/0001-cmake-Install-pkgconfig-file-in-mingw.patch"
}
build() {
  # Shared Build
  [[ -d "build-${MSYSTEM}-shared" ]] && rm -rf "build-${MSYSTEM}-shared"

  mkdir -p ${srcdir}/build-${MSYSTEM}-shared
  cd ${srcdir}/build-${MSYSTEM}-shared

  MSYS2_ARG_CONV_EXCL="-DCMAKE_INSTALL_PREFIX=" \
  ${MINGW_PREFIX}/bin/cmake.exe \
  -G"Ninja" \
  -DCMAKE_INSTALL_PREFIX=${MINGW_PREFIX} \
  -DCMAKE_BUILD_TYPE=Release \
  -DBUILD_SHARED_LIBS=ON \
  -DBUILD_EXAMPLES=OFF \
  -DBUILD_BLACKBOX_TESTS=OFF \
  ../${_realname}-${pkgver}

  ${MINGW_PREFIX}/bin/cmake.exe --build .

  # Static Build
  [[ -d "build-${MSYSTEM}-static" ]] && rm -rf "build-${MSYSTEM}-static"

  mkdir -p ${srcdir}/build-${MSYSTEM}-static
  cd ${srcdir}/build-${MSYSTEM}-static

  MSYS2_ARG_CONV_EXCL="-DCMAKE_INSTALL_PREFIX=" \
  ${MINGW_PREFIX}/bin/cmake.exe \
  -G"Ninja" \
  -DCMAKE_INSTALL_PREFIX=${MINGW_PREFIX} \
  -DCMAKE_BUILD_TYPE=Release \
  -DBUILD_SHARED_LIBS=OFF \
  -DBUILD_EXAMPLES=OFF \
  -DBUILD_BLACKBOX_TESTS=OFF \
  ../${_realname}-${pkgver}

  ${MINGW_PREFIX}/bin/cmake.exe --build .
}

package() {
  # Static Install
  cd "${srcdir}/build-${MSYSTEM}-static"
  DESTDIR=${pkgdir} ${MINGW_PREFIX}/bin/cmake.exe --install .

  # Shared Install
  cd "${srcdir}/build-${MSYSTEM}-shared"
  DESTDIR=${pkgdir} ${MINGW_PREFIX}/bin/cmake.exe --install .

  install -Dm644 "${srcdir}/${_realname}-${pkgver}/LICENSE" "${pkgdir}${MINGW_PREFIX}/share/licenses/${_realname}/LICENSE"
}
