--- pyside-setup-opensource-src-6.3.0/sources/pyside6/PySide6/__init__.py.in.orig	2022-04-11 21:07:37.000000000 +0200
+++ pyside-setup-opensource-src-6.3.0/sources/pyside6/PySide6/__init__.py.in	2022-04-14 09:18:44.080838700 +0200
@@ -54,7 +54,7 @@
 
     pyside_package_dir = Path(__file__).parent.resolve()
 
-    if sys.platform == 'win32' and sys.version_info[0] == 3 and sys.version_info[1] >= 8:
+    if sys.platform == 'win32' and 'MSC' in sys.version and sys.version_info[0] == 3 and sys.version_info[1] >= 8:
         for dir in _additional_dll_directories(pyside_package_dir):
             os.add_dll_directory(os.fspath(dir))
 
@@ -123,7 +123,7 @@
     location = Path(__file__).resolve().parent
 
     # Note: We should _not_ call this function while still building, but use the existing value!
-    in_build = location.parents[1].name == "build"
+    in_build = location.parents[1].name == "src"
     if in_build:
         return __all__
 
--- a/build_scripts/utils.py
+++ b/build_scripts/utils.py
@@ -246,7 +246,7 @@
 
 def platform_cmake_options():
     result = []
-    if sys.platform == 'win32':
+    if sys.platform == 'win32' and 'MSC' in sys.version:
         # Prevent cmake from auto-detecting clang if it is in path.
         result.append("-DCMAKE_C_COMPILER=cl.exe")
         result.append("-DCMAKE_CXX_COMPILER=cl.exe")
