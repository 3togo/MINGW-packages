# Maintainer: Alexey Pavlov <alexpux@gmail.com>
# Contributor: Ray Donnelly <mingw.android@gmail.com>
# Contributor: Konstantin Podsvirov <konstantin@podsvirov.pro>

_realname=freeglut
pkgbase="mingw-w64-${_realname}"
pkgname="${MINGW_PACKAGE_PREFIX}-${_realname}"
_pre=
_ver=3.2.2
pkgver=${_ver}${_pre}
pkgrel=2
pkgdesc="Freeglut allows the user to create and manage windows containing OpenGL contexts (mingw32-w64)"
arch=('any')
mingw_arch=('mingw32' 'mingw64' 'ucrt64' 'clang64' 'clang32' 'clangarm64')
url="https://freeglut.sourceforge.io/"
license=('spdx:MIT')
makedepends=("${MINGW_PACKAGE_PREFIX}-cc"
             "${MINGW_PACKAGE_PREFIX}-cmake"
             "${MINGW_PACKAGE_PREFIX}-ninja")
options=('strip' '!libtool' 'staticlibs')
source=("https://downloads.sourceforge.net/freeglut/${_realname}-${_ver}${_pre}.tar.gz"
        "003-freeglut-3.2.1-install-glut-h.patch"
        "004-pkg-config.patch")
sha256sums=('c5944a082df0bba96b5756dddb1f75d0cd72ce27b5395c6c1dde85c2ff297a50'
            '0d091fba73641bdc51d28763101452f606c26aed30c9ac1682a19ba9306de8aa'
            '1d5def5c769df03ec599c0eaabcdcd1a851a695bfc0142fae21a05c18e433bf8')
noextract=(${_realname}-${_ver}${_pre}.tar.gz)

prepare() {
  # Clean up old sources so re-patching doesn't fail.
  [[ -d ${srcdir}/${_realname}-${_ver}${_pre} ]] && rm -rf ${srcdir}/${_realname}-${_ver}${_pre}
  tar -xzvf ${_realname}-${_ver}${_pre}.tar.gz -C ${srcdir}
  # Upstreaming at https://github.com/dcnieho/FreeGLUT/pull/41
  cd ${_realname}-${_ver}${_pre}
  patch -p1 -i "${srcdir}"/003-freeglut-3.2.1-install-glut-h.patch
  patch -p1 -i "${srcdir}"/004-pkg-config.patch
}

build() {
  [[ -d "build-${MSYSTEM}" ]] && rm -rf "build-${MSYSTEM}"
  mkdir -p ${srcdir}/build-${MSYSTEM} && cd ${srcdir}/build-${MSYSTEM}

  CFLAGS+=" -fcommon"  # work around gcc 10 being stricter here

  MSYS2_ARG_CONV_EXCL="-DCMAKE_INSTALL_PREFIX=" \
  "${MINGW_PREFIX}"/bin/cmake \
    -GNinja \
    -DCMAKE_INSTALL_PREFIX="${MINGW_PREFIX}" \
    -DCMAKE_BUILD_TYPE=Release \
    ../${_realname}-${_ver}${_pre}

  "${MINGW_PREFIX}"/bin/cmake --build .
}

package() {
  cd "${srcdir}/build-${MSYSTEM}"
  DESTDIR="${pkgdir}" "${MINGW_PREFIX}"/bin/cmake --build . --target install
  install -Dm644 "${srcdir}"/${_realname}-${pkgver}/COPYING "${pkgdir}${MINGW_PREFIX}"/share/licenses/${_realname}/LICENSE
}
